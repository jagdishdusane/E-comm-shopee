[{"D:\\e-comm\\src\\index.js":"1","D:\\e-comm\\src\\App.js":"2","D:\\e-comm\\src\\redux\\store.js":"3","D:\\e-comm\\src\\pages\\LoginPage.js":"4","D:\\e-comm\\src\\pages\\SignupPage.js":"5","D:\\e-comm\\src\\pages\\Homepage.js":"6","D:\\e-comm\\src\\pages\\ProductInfo.js":"7","D:\\e-comm\\src\\pages\\CartPage.js":"8","D:\\e-comm\\src\\redux\\rootReducer.js":"9","D:\\e-comm\\src\\firecommerce-products.js":"10","D:\\e-comm\\src\\fireConfig.js":"11","D:\\e-comm\\src\\redux\\cartReducer.js":"12","D:\\e-comm\\src\\components\\Loader.js":"13","D:\\e-comm\\src\\components\\Layout.js":"14","D:\\e-comm\\src\\components\\Footer.js":"15","D:\\e-comm\\src\\components\\Header.js":"16","D:\\e-comm\\src\\pages\\OrderPage.js":"17","D:\\e-comm\\src\\pages\\AdminPage.js":"18","D:\\e-comm\\src\\components\\admin\\AdminHeader.js":"19","D:\\e-comm\\src\\components\\admin\\AdminLayout.js":"20","D:\\e-comm\\src\\hooks\\use-input.js":"21","D:\\e-comm\\src\\pages\\ImageUpload.js":"22"},{"size":298,"mtime":1648011835604,"results":"23","hashOfConfig":"24"},{"size":2061,"mtime":1647956641015,"results":"25","hashOfConfig":"24"},{"size":405,"mtime":1647234883121,"results":"26","hashOfConfig":"24"},{"size":3812,"mtime":1648387210341,"results":"27","hashOfConfig":"24"},{"size":8741,"mtime":1648389179850,"results":"28","hashOfConfig":"24"},{"size":4426,"mtime":1647429477884,"results":"29","hashOfConfig":"24"},{"size":2525,"mtime":1647181081496,"results":"30","hashOfConfig":"24"},{"size":8456,"mtime":1647864436608,"results":"31","hashOfConfig":"24"},{"size":194,"mtime":1646897236000,"results":"32","hashOfConfig":"24"},{"size":8169,"mtime":1646836532000,"results":"33","hashOfConfig":"24"},{"size":730,"mtime":1648284099946,"results":"34","hashOfConfig":"24"},{"size":510,"mtime":1647339114773,"results":"35","hashOfConfig":"24"},{"size":226,"mtime":1646981640000,"results":"36","hashOfConfig":"24"},{"size":330,"mtime":1647237211713,"results":"37","hashOfConfig":"24"},{"size":229,"mtime":1646814466000,"results":"38","hashOfConfig":"24"},{"size":3204,"mtime":1648310080911,"results":"39","hashOfConfig":"24"},{"size":1842,"mtime":1647235212843,"results":"40","hashOfConfig":"24"},{"size":14023,"mtime":1647864643559,"results":"41","hashOfConfig":"24"},{"size":1430,"mtime":1647237630083,"results":"42","hashOfConfig":"24"},{"size":330,"mtime":1647237982140,"results":"43","hashOfConfig":"24"},{"size":718,"mtime":1647352417828,"results":"44","hashOfConfig":"24"},{"size":2330,"mtime":1647766232418,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"dfdudg",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\e-comm\\src\\index.js",[],["98","99"],"D:\\e-comm\\src\\App.js",[],"D:\\e-comm\\src\\redux\\store.js",[],"D:\\e-comm\\src\\pages\\LoginPage.js",["100","101"],"import { React, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const [enterEmailId, setEnterEmailId] = useState(\"\");\r\n  const [enterPassword, setEnterPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const auth = getAuth();\r\n  const navigate = useNavigate();\r\n  const adminId = \"admin@gmail.com\";\r\n  const password = \"admin@123\";\r\n\r\n  let formIsValid = false;\r\n\r\n  if (enterEmailId && enterPassword) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const clearInputs = () => {\r\n    setEnterEmailId(\"\");\r\n    setEnterPassword(\"\");\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  //User Auth\r\n  async function login() {\r\n    clearErrors();\r\n    if (adminId === enterEmailId || password === enterPassword) {\r\n      navigate(\"/admin\");\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const result = await signInWithEmailAndPassword(\r\n        auth,\r\n        enterEmailId,\r\n        enterPassword\r\n      );\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(result));\r\n\r\n      setLoading(false);\r\n      toast.success(\"Login sccessful\");\r\n      navigate(`/`);\r\n    } catch (error) {\r\n      switch (error.code) {\r\n        case \"auth/invalid-email\":\r\n        case \"auth/user-not-found\":\r\n          setEmailError(error.message);\r\n          break;\r\n\r\n        case \"auth/wrong-password\":\r\n          setPasswordError(error.message);\r\n          break;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  //admin Auth\r\n\r\n  return (\r\n    <div className=\"login-parent\">\r\n      {loading && <Loader />}\r\n      <div className=\"row justify-content-center \">\r\n        <div className=\"col-md-4 z1\">\r\n          <div className=\"login-form\">\r\n            <h2>Login</h2>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Email Id\"\r\n                value={enterEmailId}\r\n                onChange={(e) => setEnterEmailId(e.target.value)}\r\n              />\r\n              <p className=\"error\">{emailError}</p>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control  mt-1\"\r\n                placeholder=\"Password\"\r\n                value={enterPassword}\r\n                onChange={(e) => setEnterPassword(e.target.value)}\r\n              />\r\n              <p className=\"error\">{passwordError}</p>\r\n            </div>\r\n\r\n            <button\r\n              className={`button-62 mt-2 ${!formIsValid ? \"disabled\" : \"\"}`}\r\n              disabled={!formIsValid}\r\n              onClick={login}\r\n              style={{\r\n                pointerEvents: !formIsValid ? \"none\" : \"\",\r\n              }}\r\n            >\r\n              Login\r\n            </button>\r\n            <hr />\r\n            <Link to=\"/signup\">Click Here To Sign Up</Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-5 z1\">\r\n          <lottie-player\r\n            src=\"https://assets10.lottiefiles.com/packages/lf20_hu9cd9.json\"\r\n            background=\"transparent\"\r\n            speed=\"1\"\r\n            loop\r\n            autoplay\r\n          ></lottie-player>\r\n        </div>\r\n      </div>\r\n      <div className=\"login-bottom\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","D:\\e-comm\\src\\pages\\SignupPage.js",["102","103","104","105","106"],"import React from \"react\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport fireDB from \"../fireConfig\";\r\n\r\nconst SignupPage = () => {\r\n  const [enterFirstName, setEnterFirstName] = useState(\"\");\r\n  const [enterLastName, setEnterLasttName] = useState(\"\");\r\n  const [enterGender, setEnterGender] = useState(\"\");\r\n  const [enterMobileNo, setEnterMobileNo] = useState(\"\");\r\n  const [enterEmailId, setEnterEmailId] = useState(\"\");\r\n  const [enterPassword, setEnterPassword] = useState(\"\");\r\n  const [enterConfirmPassword, setEnterConfirmPassword] = useState(\"\");\r\n\r\n  const [emailError, setEmailError] = useState(\"\");\r\n\r\n  var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  var letters = /^[A-z ]+$/;\r\n  var strongRegex = new RegExp(\r\n    \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n  );\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const auth = getAuth();\r\n\r\n  let formIsValid = false;\r\n\r\n  if (\r\n    enterFirstName &&\r\n    enterLastName &&\r\n    enterMobileNo &&\r\n    enterEmailId &&\r\n    enterPassword &&\r\n    enterConfirmPassword\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  async function signUp() {\r\n    try {\r\n      setLoading(true);\r\n      const result = await createUserWithEmailAndPassword(\r\n        auth,\r\n        enterEmailId,\r\n        enterPassword\r\n      );\r\n      console.log(result);\r\n      setLoading(false);\r\n      toast.success(\"Sign up sccessful\");\r\n      navigate(`/login`);\r\n    } catch (error) {\r\n      switch (error.code) {\r\n        case \"auth/email-already-in-use\":\r\n        case \"auth/invalid-email\":\r\n          setEmailError(error.message);\r\n          break;\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    const users = {\r\n      firstName: enterFirstName,\r\n      lastName: enterLastName,\r\n      gender: enterGender,\r\n      mobileNo: enterMobileNo,\r\n      password: enterPassword,\r\n      confirmPassword: enterConfirmPassword,\r\n    };\r\n\r\n    try {\r\n      const result = await addDoc(collection(fireDB, \"users\"), users);\r\n    } catch (error) {\r\n      toast.error(\"failed\");\r\n    }\r\n  }\r\n\r\n  const [firstNameError, setFirstNameError] = useState(false);\r\n  const [lastNameError, setLastNameError] = useState(false);\r\n  const [mobileError, setMobileError] = useState(false);\r\n  const [passwordError, setpasswordError] = useState(false);\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n\r\n  const formHandler = () => {\r\n    if (!letters.test(enterFirstName)) {\r\n      setFirstNameError(true);\r\n      return 0;\r\n    }\r\n    setFirstNameError(false);\r\n\r\n    if (!letters.test(enterLastName)) {\r\n      setLastNameError(true);\r\n      return 0;\r\n    }\r\n    setLastNameError(false);\r\n\r\n    if (enterMobileNo.length !== 10) {\r\n      setMobileError(true);\r\n      return 0;\r\n    }\r\n    setMobileError(false);\r\n\r\n    /* if (!mailformat.test(enterEmailId)) {\r\n      toast.error(\"Enter valid email\");\r\n      return 0;\r\n    } */\r\n    if (!strongRegex.test(enterPassword)) {\r\n      setpasswordError(true);\r\n\r\n      return 0;\r\n    }\r\n    setpasswordError(false);\r\n\r\n    if (enterPassword !== enterConfirmPassword) {\r\n      setConfirmPasswordError(true);\r\n      return 0;\r\n    }\r\n    setConfirmPasswordError(false);\r\n\r\n    signUp();\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-parent\">\r\n      {loading && <Loader />}\r\n      <div className=\"signup-top\"></div>\r\n      <div className=\"row justify-content-center \">\r\n        <div className=\"col-md-5\">\r\n          <lottie-player\r\n            src=\"https://assets9.lottiefiles.com/packages/lf20_yr6zz3wv.json\"\r\n            background=\"transparent\"\r\n            speed=\"1\"\r\n            loop\r\n            autoplay\r\n          ></lottie-player>\r\n        </div>\r\n        <div className=\"col-md-4 z1\">\r\n          <div className=\"signup-form\">\r\n            <h2>Sign Up</h2>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control  mt-1\"\r\n                placeholder=\"First Name\"\r\n                value={enterFirstName}\r\n                onChange={(e) => setEnterFirstName(e.target.value)}\r\n              />\r\n              {firstNameError && (\r\n                <p className=\"error\">First name must be valid</p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Last Name\"\r\n                value={enterLastName}\r\n                onChange={(e) => setEnterLasttName(e.target.value)}\r\n              />\r\n              {lastNameError && (\r\n                <p className=\"error\">Last name must be valid</p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                className=\"radio-btn\"\r\n                type=\"radio\"\r\n                name=\"radiogroup1\"\r\n                value=\"male\"\r\n                onChange={(e) => setEnterGender(e.target.value)}\r\n              />\r\n              <label htmlFor=\"rd1\">Male</label>\r\n              <input\r\n                className=\"radio-btn\"\r\n                type=\"radio\"\r\n                name=\"radiogroup1\"\r\n                value=\"female\"\r\n                onChange={(e) => setEnterGender(e.target.value)}\r\n              />\r\n              <label htmlFor=\"rd2\">Female</label>\r\n              <input\r\n                className=\"radio-btn\"\r\n                type=\"radio\"\r\n                name=\"radiogroup1\"\r\n                value=\"other\"\r\n                onChange={(e) => setEnterGender(e.target.value)}\r\n              />\r\n              <label htmlFor=\"rd3\">Other</label>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">Mobile Number</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Mobile Number\"\r\n                value={enterMobileNo}\r\n                onChange={(e) => setEnterMobileNo(e.target.value)}\r\n              />\r\n              {mobileError && (\r\n                <p className=\"error\">Mobile number must be 10 digit</p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">Email Id</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Email Id\"\r\n                value={enterEmailId}\r\n                onChange={(e) => setEnterEmailId(e.target.value)}\r\n              />\r\n              <p className=\"error\">{emailError}</p>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Password\"\r\n                value={enterPassword}\r\n                onChange={(e) => setEnterPassword(e.target.value)}\r\n              />\r\n              {passwordError && (\r\n                <p className=\"error\">\r\n                  Password must be 8 characters or longer. And combination of\r\n                  uppercase,lowercase,special characters,numbers.\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"\">Confirm password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control mt-1\"\r\n                placeholder=\"Confirm password\"\r\n                value={enterConfirmPassword}\r\n                onChange={(e) => setEnterConfirmPassword(e.target.value)}\r\n              />\r\n              {confirmPasswordError && (\r\n                <p className=\"error\">\r\n                  Password and confirm Password must be same\r\n                </p>\r\n              )}\r\n            </div>\r\n            <button\r\n              className={`button-62 mt-3 ${!formIsValid ? \"disabled\" : \"\"}`}\r\n              disabled={!formIsValid}\r\n              onClick={formHandler}\r\n              style={{\r\n                pointerEvents: !formIsValid ? \"none\" : \"\",\r\n              }}\r\n            >\r\n              Sign Up\r\n            </button>\r\n            <hr />\r\n            <Link to=\"/login\">Click Here To Login</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n","D:\\e-comm\\src\\pages\\Homepage.js",[],"D:\\e-comm\\src\\pages\\ProductInfo.js",["107"],"import { React, useState, useEffect } from \"react\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport fireDB from \"../fireConfig\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProductInfo = () => {\r\n  const [product, setProduct] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const { cartItems } = useSelector((state) => state.cartReducer);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  async function getData() {\r\n    try {\r\n      setLoading(true);\r\n      const productTemp = await getDoc(\r\n        doc(fireDB, \"products\", params.productid)\r\n      );\r\n      setProduct(productTemp.data());\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  const addToCart = (product) => {\r\n    dispatch({ type: \"ADD_TO_CART\", payload: product });\r\n    toast.success(\"Product Add to Cart Successful\", {\r\n      position: \"bottom-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout loading={loading}>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n            {product && (\r\n              <div>\r\n                <p>\r\n                  <b>{product.name}</b>\r\n                </p>\r\n                <img\r\n                  src={product.imageURL}\r\n                  alt=\"\"\r\n                  className=\"product-info-img\"\r\n                />\r\n                <hr />\r\n                <p>{product.description}</p>\r\n                <h3>\r\n                  <b>₹ {product.price}</b>\r\n                </h3>\r\n                <hr />\r\n                <div className=\"d-flex justify-content-end my-3\">\r\n                  <button\r\n                    className=\"button-62\"\r\n                    onClick={() => addToCart(product)}\r\n                  >\r\n                    ADD TO CART\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","D:\\e-comm\\src\\pages\\CartPage.js",[],"D:\\e-comm\\src\\redux\\rootReducer.js",[],"D:\\e-comm\\src\\firecommerce-products.js",[],["108","109"],"D:\\e-comm\\src\\fireConfig.js",[],"D:\\e-comm\\src\\redux\\cartReducer.js",[],"D:\\e-comm\\src\\components\\Loader.js",[],"D:\\e-comm\\src\\components\\Layout.js",[],"D:\\e-comm\\src\\components\\Footer.js",[],"D:\\e-comm\\src\\components\\Header.js",[],"D:\\e-comm\\src\\pages\\OrderPage.js",[],"D:\\e-comm\\src\\pages\\AdminPage.js",["110"],"import { React, useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\r\nimport { storage } from \"../fireConfig\";\r\nimport { FaTrash, FaEdit } from \"react-icons/fa\";\r\nimport ImageUpload from \"./ImageUpload\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  setDoc,\r\n  doc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport fireDB from \"../fireConfig\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AdminLayout from \"../components/admin/AdminLayout\";\r\n\r\nconst AdminPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [product, setProduct] = useState({\r\n    name: \"\",\r\n    price: null,\r\n    imageURL: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const [addProductDetails, setAddProductDetails] = useState({\r\n    name: \"\",\r\n    price: null,\r\n    imageURL: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [forAdd, setForAdd] = useState(false);\r\n  const closeHandle = () => setForAdd(false);\r\n  const showHandle = () => setForAdd(true);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  async function getData() {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const users = await getDocs(collection(fireDB, \"products\"));\r\n      const productsArray = [];\r\n      users.forEach((doc) => {\r\n        // console.log(doc.id, \" => \", doc.data());\r\n        const obj = {\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        };\r\n        productsArray.push(obj);\r\n        setLoading(false);\r\n      });\r\n      setProducts(productsArray);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const editProductHandler = (item) => {\r\n    setProduct(item);\r\n    setShow(true);\r\n  };\r\n\r\n  const updateProduct = async () => {\r\n    try {\r\n      await setDoc(doc(fireDB, \"products\", product.id), product);\r\n      handleClose();\r\n      toast.success(\"Prodcut updated successfully\");\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log();\r\n      toast.error(\"Product update failed\");\r\n    }\r\n  };\r\n\r\n  const [data, setData] = useState({\r\n    image: null,\r\n  });\r\n\r\n  async function imageAdd() {\r\n    try {\r\n      setLoading(true);\r\n      const storageRef = ref(storage, `/files/${data.image.name}`);\r\n      const uploadTask = uploadBytesResumable(storageRef, data.image);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          let progress;\r\n          progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log(progress);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          getDownloadURL(uploadTask.snapshot.ref).then((imageUrl) => {\r\n            console.log(imageUrl);\r\n\r\n            setAddProductDetails({ imageURL: imageUrl });\r\n            setLoading(false);\r\n          });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      toast.error(\"Please Upload Image\");\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function addProducData() {\r\n    try {\r\n      setLoading(true);\r\n      await addDoc(collection(fireDB, \"products\"), addProductDetails);\r\n      closeHandle();\r\n      toast.success(\"Prodcut add successfully\");\r\n      window.location.reload();\r\n    } catch (error) {\r\n      toast.error(\"Product add failed\");\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  var regName = /^[a-zA-Z0-9 ]+$/;\r\n  var regCategory = /^[a-zA-Z ]+$/;\r\n  var regDescription = /^\\w+(?:\\s+\\w+){0,4}$/;\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const [errorName, setErrorName] = useState(false);\r\n\r\n  const [errorDescription, setErrorDescription] = useState(false);\r\n  const [errorCategory, setErrorCategory] = useState(false);\r\n\r\n  const addProduct = async (e) => {\r\n    if (\r\n      !addProductDetails.name ||\r\n      !addProductDetails.imageURL ||\r\n      !addProductDetails.price ||\r\n      !addProductDetails.category ||\r\n      !addProductDetails.price ||\r\n      !addProductDetails.description\r\n    ) {\r\n      // toast.error(\"Enter Valid Data\");\r\n      setError(true);\r\n      return 0;\r\n    }\r\n    setError(false);\r\n\r\n    if (!addProductDetails.name.match(regName)) {\r\n      setErrorName(true);\r\n      return 0;\r\n    }\r\n    setErrorName(false);\r\n\r\n    if (!addProductDetails.category.match(regCategory)) {\r\n      setErrorCategory(true);\r\n      return 0;\r\n    }\r\n    setErrorCategory(false);\r\n    if (!addProductDetails.description.match(regDescription)) {\r\n      setErrorDescription(true);\r\n      return 0;\r\n    }\r\n    setErrorDescription(false);\r\n\r\n    addProducData();\r\n  };\r\n\r\n  const addHandler = () => {\r\n    showHandle();\r\n    setAddProductDetails(\"\");\r\n    setError(false);\r\n    setErrorName(false);\r\n    setErrorCategory(false);\r\n    setErrorDescription(false);\r\n  };\r\n\r\n  const deleteProdcut = async (item) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Are you sure you want to delete this item!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          deleteDoc(doc(fireDB, \"products\", item.id));\r\n          toast.success(\"Product delete successfully\");\r\n          getData();\r\n        } catch (error) {\r\n          toast.error(\"Product delete failed\");\r\n        }\r\n        Swal.fire(\"Deleted!\", \"Your product has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AdminLayout loading={loading}>\r\n      <div className=\"d-flex justify-content-between py-1 px-3 \">\r\n        <h1 className=\" mt-1\">Product List</h1>\r\n        <button className=\"button-62 mt-1\" onClick={addHandler}>\r\n          Add Product\r\n        </button>\r\n      </div>\r\n      <div className=\"mx-5 \">\r\n        <table className=\"table mt-2  px-3 adminPanel\">\r\n          <thead>\r\n            <tr>\r\n              <th>Image</th>\r\n              <th>Name</th>\r\n              <th>Category</th>\r\n              <th>Price</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminPanel\">\r\n            {products.map((item) => {\r\n              return (\r\n                <tr key={item.id} className=\"adminPanel\">\r\n                  <td>\r\n                    <img src={item.imageURL} alt=\"\" height=\"80\" width=\"80\" />\r\n                  </td>\r\n                  <td>{item.name}</td>\r\n                  <td>\r\n                    {item.category.charAt(0).toUpperCase() +\r\n                      item.category.slice(1)}\r\n                  </td>\r\n                  <td>₹ {item.price}</td>\r\n                  <td>\r\n                    <FaTrash\r\n                      color=\"red\"\r\n                      onClick={() => deleteProdcut(item)}\r\n                      size={20}\r\n                    />\r\n                    <FaEdit\r\n                      onClick={() => editProductHandler(item)}\r\n                      color=\"blue\"\r\n                      size={20}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{\"Edit Product\"}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <div className=\"signup-form\">\r\n          <hr />\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Product Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Product Name\"\r\n              value={product.name}\r\n              onChange={(e) => setProduct({ ...product, name: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Image URL</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Image URL\"\r\n              value={product.imageURL}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, imageURL: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Product Price</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"product Price\"\r\n              value={product.price}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, price: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Category</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Category\"\r\n              value={product.category}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, category: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Description\"\r\n              value={product.description}\r\n              onChange={(e) =>\r\n                setProduct({ ...product, description: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <hr />\r\n        </div>\r\n        <Modal.Footer>\r\n          <button className=\"button-62\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button className=\"button-62\" onClick={updateProduct}>\r\n            Save\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={forAdd} onHide={closeHandle}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{\"Add a Product\"}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <div className=\"signup-form\">\r\n          <hr />\r\n          <div className=\"mb-3\">\r\n            <p>\r\n              Upload Product Image\r\n              <span style={{ color: \"red\", fontSize: \"1.3rem\" }}>*</span>\r\n            </p>\r\n\r\n            <ImageUpload setData={setData} />\r\n            <Button className=\"btn btn-success btn-img \" onClick={imageAdd}>\r\n              Image Upload\r\n            </Button>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Product Name</label>\r\n            <span style={{ color: \"red\" }}> *</span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Product Name\"\r\n              value={addProductDetails.name}\r\n              onChange={(e) =>\r\n                setAddProductDetails({\r\n                  ...addProductDetails,\r\n                  name: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            {errorName && <div className=\"form-text\">Enter valid name</div>}\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Image URL</label>\r\n            <span style={{ color: \"red\" }}> *</span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Image URL\"\r\n              value={addProductDetails.imageURL}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Product Price</label>\r\n            <span style={{ color: \"red\" }}> *</span>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"product Price\"\r\n              value={addProductDetails.price}\r\n              onChange={(e) =>\r\n                setAddProductDetails({\r\n                  ...addProductDetails,\r\n                  price: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Category</label>\r\n            <span style={{ color: \"red\" }}> *</span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Category\"\r\n              value={addProductDetails.category}\r\n              onChange={(e) =>\r\n                setAddProductDetails({\r\n                  ...addProductDetails,\r\n                  category: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            {errorCategory && (\r\n              <div className=\"form-text\">Enter valid category</div>\r\n            )}\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"my-0 py-0\">Description</label>\r\n            <span style={{ color: \"red\" }}> *</span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control my-0\"\r\n              placeholder=\"Description\"\r\n              value={addProductDetails.description}\r\n              onChange={(e) =>\r\n                setAddProductDetails({\r\n                  ...addProductDetails,\r\n                  description: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            {errorDescription && (\r\n              <div className=\"form-text\">Enter only maximum 5 words!</div>\r\n            )}\r\n          </div>\r\n\r\n          <hr />\r\n          {error && <h3 className=\"error\">All fields are required!</h3>}\r\n        </div>\r\n\r\n        <Modal.Footer>\r\n          <button className=\"button-62\" onClick={closeHandle}>\r\n            Close\r\n          </button>\r\n\r\n          <button className=\"button-62\" onClick={addProduct}>\r\n            Save\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","D:\\e-comm\\src\\components\\admin\\AdminHeader.js",["111","112","113","114"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { FaCartPlus } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminHeader = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/admin\">\r\n            E-Comm Shopee\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\">\r\n              <FaBars size={25} color=\"white\" />\r\n            </span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ms-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                  Logout\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","D:\\e-comm\\src\\components\\admin\\AdminLayout.js",[],"D:\\e-comm\\src\\hooks\\use-input.js",[],["115","116"],"D:\\e-comm\\src\\pages\\ImageUpload.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":26,"column":9,"nodeType":"123","messageId":"124","endLine":26,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":56,"column":7,"nodeType":"127","messageId":"128","endLine":65,"endColumn":8},{"ruleId":"121","severity":1,"message":"129","line":23,"column":7,"nodeType":"123","messageId":"124","endLine":23,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":23,"column":27,"nodeType":"132","messageId":"133","endLine":23,"endColumn":28,"suggestions":"134"},{"ruleId":"130","severity":1,"message":"131","line":23,"column":43,"nodeType":"132","messageId":"133","endLine":23,"endColumn":44,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"126","line":60,"column":7,"nodeType":"127","messageId":"128","endLine":65,"endColumn":8},{"ruleId":"121","severity":1,"message":"136","line":79,"column":13,"nodeType":"123","messageId":"124","endLine":79,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":18,"column":6,"nodeType":"139","endLine":18,"endColumn":8,"suggestions":"140"},{"ruleId":"117","replacedBy":"141"},{"ruleId":"119","replacedBy":"142"},{"ruleId":"121","severity":1,"message":"143","line":44,"column":9,"nodeType":"123","messageId":"124","endLine":44,"endColumn":19},{"ruleId":"121","severity":1,"message":"144","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":21},{"ruleId":"121","severity":1,"message":"145","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"146","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":20},{"ruleId":"121","severity":1,"message":"147","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":21},{"ruleId":"117","replacedBy":"148"},{"ruleId":"119","replacedBy":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'clearInputs' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'mailformat' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["152","153"],["154","155"],"'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["156"],["150"],["151"],"'handleShow' is assigned a value but never used.","'useSelector' is defined but never used.","'FaUser' is defined but never used.","'FaCartPlus' is defined but never used.","'useNavigate' is defined but never used.",["150"],["151"],"no-global-assign","no-unsafe-negation",{"messageId":"157","fix":"158","desc":"159"},{"messageId":"160","fix":"161","desc":"162"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"160","fix":"164","desc":"162"},{"desc":"165","fix":"166"},"removeEscape",{"range":"167","text":"168"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"169","text":"170"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"171","text":"168"},{"range":"172","text":"170"},"Update the dependencies array to be: [getData]",{"range":"173","text":"174"},[947,948],"",[947,947],"\\",[963,964],[963,963],[636,638],"[getData]"]